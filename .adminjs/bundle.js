(function (React, adminjs, designSystem) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const api = new adminjs.ApiClient();
  function Dashboard() {
    const [loading, setLoading] = React.useState(true);
    const [error, setError] = React.useState('');
    const [data, setData] = React.useState({
      usersCount: 0,
      serverTime: '',
      adminJSVersion: ''
    });
    React.useEffect(() => {
      let mounted = true;
      (async () => {
        try {
          const res = await api.getDashboard();
          if (mounted) {
            const payload = res?.data || {};
            setData({
              usersCount: Number(payload.usersCount) || 0,
              serverTime: payload.serverTime || '',
              adminJSVersion: payload.adminJSVersion || ''
            });
            setLoading(false);
          }
        } catch (e) {
          if (mounted) {
            setError('Не удалось загрузить данные дашборда');
            setLoading(false);
          }
        }
      })();
      return () => {
        mounted = false;
      };
    }, []);
    const serverTimeHuman = React.useMemo(() => {
      if (!data.serverTime) return '—';
      try {
        return new Date(data.serverTime).toLocaleString();
      } catch {
        return data.serverTime;
      }
    }, [data.serverTime]);
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      px: "xl",
      py: "lg"
    }, /*#__PURE__*/React__default.default.createElement(Header, null), loading ? /*#__PURE__*/React__default.default.createElement(LoaderBlock, null) : error ? /*#__PURE__*/React__default.default.createElement(ErrorPlaceholder, {
      text: error
    }) : /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement(CardsRow, null, /*#__PURE__*/React__default.default.createElement(KpiCard, {
      title: "\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0438",
      value: formatNumber(data.usersCount),
      hint: "\u0412\u0441\u0435\u0433\u043E \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0435"
    }), /*#__PURE__*/React__default.default.createElement(KpiCard, {
      title: "\u0412\u0440\u0435\u043C\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
      value: serverTimeHuman,
      hint: "\u0421\u0438\u043D\u0445\u0440\u043E\u043D\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u043E"
    })), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mt: "xl",
      display: "grid",
      gridTemplateColumns: "1fr 1fr",
      gridGap: "xl",
      style: {
        gap: 24
      }
    }, /*#__PURE__*/React__default.default.createElement(Panel, {
      title: "\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E \u0441\u0438\u0441\u0442\u0435\u043C\u0435"
    }, /*#__PURE__*/React__default.default.createElement(InfoRow, {
      label: "\u0412\u0435\u0440\u0441\u0438\u044F AdminJS",
      value: data.adminJSVersion
    }), /*#__PURE__*/React__default.default.createElement(InfoRow, {
      label: "\u0422\u0435\u043A\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
      value: serverTimeHuman
    })), /*#__PURE__*/React__default.default.createElement(Panel, {
      title: "\u041F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0435 \u0441\u043E\u0431\u044B\u0442\u0438\u044F"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      color: "grey60"
    }, "\u041F\u043E\u043A\u0430 \u0441\u043E\u0431\u044B\u0442\u0438\u0439 \u043D\u0435\u0442")))));
  }
  function Header() {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mb: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      marginBottom: "xs",
      style: {
        fontWeight: 600
      }
    }, "\u041F\u0430\u043D\u0435\u043B\u044C \u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u044F"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      color: "grey60"
    }, "\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0440\u0435\u0437\u044E\u043C\u0435 \u043A\u043B\u044E\u0447\u0435\u0432\u044B\u0445 \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0435\u0439 \u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u0441\u0438\u0441\u0442\u0435\u043C\u044B"));
  }
  function CardsRow({
    children
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "grid",
      gridTemplateColumns: "repeat(auto-fit, minmax(260px, 1fr))",
      gridGap: "xl",
      style: {
        gap: 24
      }
    }, children);
  }
  function KpiCard({
    title,
    value,
    hint
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "container",
      border: true,
      rounded: true,
      p: "xl",
      style: {
        background: '#fff',
        boxShadow: '0 2px 6px rgba(0,0,0,0.05)',
        transition: 'all 0.2s'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Label, null, title), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      as: "div",
      mt: "md",
      style: {
        fontSize: 32,
        fontWeight: 700,
        lineHeight: 1.2
      }
    }, value), hint ? /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      mt: "xs",
      color: "grey60",
      style: {
        background: '#f8f9fa',
        borderRadius: 6,
        padding: '2px 6px',
        display: 'inline-block'
      }
    }, hint) : null);
  }
  function Panel({
    title,
    children
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "container",
      border: true,
      rounded: true,
      p: "xl",
      style: {
        background: '#fff',
        boxShadow: '0 2px 6px rgba(0,0,0,0.05)'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      marginBottom: "md",
      style: {
        fontSize: 18,
        fontWeight: 600
      }
    }, title), children);
  }
  function InfoRow({
    label,
    value
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      py: "sm",
      style: {
        borderTop: '1px solid #f0f2f5'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      color: "grey60"
    }, label), /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, value));
  }
  function LoaderBlock() {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      style: {
        minHeight: '240px'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Loader, null));
  }
  function ErrorPlaceholder({
    text
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "xl",
      style: {
        border: '1px solid #f5c2c7',
        background: '#f8d7da',
        borderRadius: 8
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      style: {
        color: '#842029',
        fontWeight: 600
      }
    }, text));
  }
  function formatNumber(n) {
    try {
      return new Intl.NumberFormat('ru-RU').format(Number(n) || 0);
    } catch {
      return String(n);
    }
  }

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.Dashboard = Dashboard;

})(React, AdminJS, AdminJSDesignSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
