(function (React, adminjs, designSystem) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const api = new adminjs.ApiClient();
  function Dashboard() {
    const [loading, setLoading] = React.useState(true);
    const [error, setError] = React.useState('');
    const [data, setData] = React.useState({
      usersCount: 0,
      serverTime: '',
      adminJSVersion: '',
      users: []
    });
    React.useEffect(() => {
      let mounted = true;
      (async () => {
        try {
          const res = await api.getDashboard();
          if (mounted) {
            const payload = res?.data || {};
            setData({
              usersCount: Number(payload.usersCount) || 0,
              serverTime: payload.serverTime || '',
              adminJSVersion: payload.adminJSVersion || '',
              users: Array.isArray(payload.users) ? payload.users : []
            });
            setLoading(false);
          }
        } catch (e) {
          if (mounted) {
            setError('Не удалось загрузить данные дашборда');
            setLoading(false);
          }
        }
      })();
      return () => {
        mounted = false;
      };
    }, []);
    const serverTimeHuman = React.useMemo(() => {
      if (!data.serverTime) return '—';
      try {
        return new Date(data.serverTime).toLocaleString();
      } catch {
        return data.serverTime;
      }
    }, [data.serverTime]);

    // --- Подготовка данных для графика ---
    const chartData = React.useMemo(() => {
      if (!data.users.length) return [];
      const grouped = {};
      data.users.forEach(u => {
        if (!u.createdAt) return;
        const d = new Date(u.createdAt);
        const key = d.toLocaleDateString('ru-RU', {
          year: 'numeric',
          month: '2-digit',
          day: '2-digit'
        });
        grouped[key] = (grouped[key] || 0) + 1;
      });
      return Object.entries(grouped).map(([date, count]) => ({
        date,
        count
      })).sort((a, b) => new Date(a.date) - new Date(b.date));
    }, [data.users]);
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      px: "xl",
      py: "lg"
    }, /*#__PURE__*/React__default.default.createElement(Header, null), loading ? /*#__PURE__*/React__default.default.createElement(LoaderBlock, null) : error ? /*#__PURE__*/React__default.default.createElement(ErrorPlaceholder, {
      text: error
    }) : /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement(CardsRow, null, /*#__PURE__*/React__default.default.createElement(KpiCard, {
      title: "\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0438",
      value: formatNumber(data.usersCount),
      hint: "\u0412\u0441\u0435\u0433\u043E \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0435"
    }), /*#__PURE__*/React__default.default.createElement(KpiCard, {
      title: "\u041A\u0430\u0441\u0442\u043E\u043C\u043D\u044B\u0439 \u0431\u043B\u043E\u043A",
      value: "\u0421\u043E\u0441\u0430\u043B?",
      hint: "\u0414\u0430"
    })), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mt: "xl",
      display: "grid",
      gridTemplateColumns: "1fr 1fr",
      gridGap: "xl",
      style: {
        gap: 24
      }
    }, /*#__PURE__*/React__default.default.createElement(Panel, {
      title: "\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E \u0441\u0438\u0441\u0442\u0435\u043C\u0435"
    }, /*#__PURE__*/React__default.default.createElement(InfoRow, {
      label: "\u0412\u0435\u0440\u0441\u0438\u044F AdminJS",
      value: data.adminJSVersion
    }), /*#__PURE__*/React__default.default.createElement(InfoRow, {
      label: "\u0422\u0435\u043A\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
      value: serverTimeHuman
    })), /*#__PURE__*/React__default.default.createElement(Panel, {
      title: "\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439"
    }, chartData.length === 0 ? /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      color: "grey60"
    }, "\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F") : /*#__PURE__*/React__default.default.createElement(LineChart, {
      data: chartData
    })))));
  }
  function LineChart({
    data
  }) {
    const width = 400;
    const height = 250;
    const padding = 30;
    const maxY = Math.max(...data.map(d => d.count), 1);
    const points = data.map((d, i) => {
      const x = padding + i / (data.length - 1) * (width - padding * 2);
      const y = height - padding - d.count / maxY * (height - padding * 2);
      return {
        x,
        y,
        label: d.date,
        value: d.count
      };
    });
    const pathD = points.map((p, i) => `${i === 0 ? 'M' : 'L'}${p.x},${p.y}`).join(' ');
    return /*#__PURE__*/React__default.default.createElement("svg", {
      width: "100%",
      height: height,
      viewBox: `0 0 ${width} ${height}`
    }, /*#__PURE__*/React__default.default.createElement("line", {
      x1: padding,
      y1: height - padding,
      x2: width - padding,
      y2: height - padding,
      stroke: "#ccc"
    }), /*#__PURE__*/React__default.default.createElement("line", {
      x1: padding,
      y1: padding,
      x2: padding,
      y2: height - padding,
      stroke: "#ccc"
    }), /*#__PURE__*/React__default.default.createElement("path", {
      d: pathD,
      fill: "none",
      stroke: "#4f46e5",
      strokeWidth: "2"
    }), points.map((p, i) => /*#__PURE__*/React__default.default.createElement("circle", {
      key: i,
      cx: p.x,
      cy: p.y,
      r: "4",
      fill: "#4f46e5"
    })), points.map((p, i) => /*#__PURE__*/React__default.default.createElement("text", {
      key: i,
      x: p.x,
      y: height - padding + 15,
      fontSize: "10",
      textAnchor: "middle",
      fill: "#666"
    }, p.label)), /*#__PURE__*/React__default.default.createElement("text", {
      x: 5,
      y: padding,
      fontSize: "10",
      fill: "#666"
    }, maxY), /*#__PURE__*/React__default.default.createElement("text", {
      x: 5,
      y: height - padding,
      fontSize: "10",
      fill: "#666"
    }, "0"));
  }
  function Header() {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mb: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      marginBottom: "xs",
      style: {
        fontWeight: 600
      }
    }, "\u041F\u0430\u043D\u0435\u043B\u044C \u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u044F"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      color: "grey60"
    }, "\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0440\u0435\u0437\u044E\u043C\u0435 \u043A\u043B\u044E\u0447\u0435\u0432\u044B\u0445 \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0435\u0439 \u0438 \u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u0441\u0438\u0441\u0442\u0435\u043C\u044B"));
  }
  function CardsRow({
    children
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "grid",
      gridTemplateColumns: "repeat(auto-fit, minmax(260px, 1fr))",
      gridGap: "xl",
      style: {
        gap: 24
      }
    }, children);
  }
  function KpiCard({
    title,
    value,
    hint
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "container",
      border: true,
      rounded: true,
      p: "xl",
      style: {
        background: '#fff',
        boxShadow: '0 2px 6px rgba(0,0,0,0.05)',
        transition: 'all 0.2s'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Label, null, title), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      as: "div",
      mt: "md",
      style: {
        fontSize: 32,
        fontWeight: 700,
        lineHeight: 1.2
      }
    }, value), hint ? /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      variant: "sm",
      mt: "xs",
      color: "grey60",
      style: {
        background: '#f8f9fa',
        borderRadius: 6,
        padding: '2px 6px',
        display: 'inline-block'
      }
    }, hint) : null);
  }
  function Panel({
    title,
    children
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "container",
      border: true,
      rounded: true,
      p: "xl",
      style: {
        background: '#fff',
        boxShadow: '0 2px 6px rgba(0,0,0,0.05)'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, {
      marginBottom: "md",
      style: {
        fontSize: 18,
        fontWeight: 600
      }
    }, title), children);
  }
  function InfoRow({
    label,
    value
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      py: "sm",
      style: {
        borderTop: '1px solid #f0f2f5'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      color: "grey60"
    }, label), /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, value));
  }
  function LoaderBlock() {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      style: {
        minHeight: '240px'
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Loader, null));
  }
  function ErrorPlaceholder({
    text
  }) {
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "xl",
      style: {
        border: '1px solid #f5c2c7',
        background: '#f8d7da',
        borderRadius: 8
      }
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      style: {
        color: '#842029',
        fontWeight: 600
      }
    }, text));
  }
  function formatNumber(n) {
    try {
      return new Intl.NumberFormat('ru-RU').format(Number(n) || 0);
    } catch {
      return String(n);
    }
  }

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.Dashboard = Dashboard;

})(React, AdminJS, AdminJSDesignSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
